#+TITLE: development
#+DRAFT: false
#+TAGS[]: emacs config
#+PROPERTY: header-args:emacs-lisp :comments link :results none

* Javascript

https://github.com/mooz/js2-mode

#+BEGIN_SRC emacs-lisp
  (use-package js2-mode
    :init
    (setq indent-tabs-mode t)
    (setq tab-width 8)
    (add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
    )
#+END_SRC


* markdown

#+BEGIN_SRC emacs-lisp
(use-package markdown-mode
  :ensure t
  :mode ("README\\.md\\'" . gfm-mode)
  :init (setq markdown-command "multimarkdown"))
#+END_SRC


* yaml

#+BEGIN_SRC emacs-lisp
(use-package yaml-mode
  :ensure t
  :mode "\\.yml\\'")
#+END_SRC


* rust

more https://robert.kra.hn/posts/rust-emacs-setup/

#+BEGIN_SRC emacs-lisp
  (use-package rustic
    :ensure
    :config
    ;; comment to disable rustfmt on save
    (setq rustic-format-on-save t)
    (add-hook 'eglot--managed-mode-hook (lambda () (flymake-mode -1)))
    (setq rustic-lsp-client 'eglot)
    )
#+END_SRC


* treesitter

#+BEGIN_SRC emacs-lisp
  ;; (require 'treesit)
  ;; (use-package treesit-auto
  ;;   :ensure
  ;;   :demand t
  ;;   :config
  ;;   (global-treesit-auto-mode)
  ;;   (setq treesit-language-source-alist
  ;;   '(;; (bash "https://github.com/tree-sitter/tree-sitter-bash")
  ;;     ;; (css "https://github.com/tree-sitter/tree-sitter-css")
  ;;     ;; (elisp "https://github.com/Wilfred/tree-sitter-elisp")
  ;;     ;; (html "https://github.com/tree-sitter/tree-sitter-html")
  ;;     ;; (js . ("https://github.com/tree-sitter/tree-sitter-javascript" "master" "src"))
  ;;     ;; (json "https://github.com/tree-sitter/tree-sitter-json")
  ;;     ;; (markdown "https://github.com/ikatyang/tree-sitter-markdown")
  ;;     (python "https://github.com/tree-sitter/tree-sitter-python")
  ;;     (rust "https://github.com/tree-sitter/tree-sitter-rust")
  ;;     ;; (toml "https://github.com/tree-sitter/tree-sitter-toml")
  ;;     ;; (yaml "https://github.com/ikatyang/tree-sitter-yaml")
  ;;     )))
#+END_SRC


* markdown

#+BEGIN_SRC emacs-lisp
(use-package markdown-mode
  :ensure t
  :mode ("README\\.md\\'" . gfm-mode)
  :init (setq markdown-command "multimarkdown"))
#+END_SRC


* eglot

needs language servers, on ArchLinux I use:

- ~pyright~ for python

and start the mode with ~M-x eglot~

* csv

#+BEGIN_SRC emacs-lisp
(use-package csv-mode
  :ensure t
  :mode "\\.csv\\'")
#+END_SRC
